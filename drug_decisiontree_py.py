# -*- coding: utf-8 -*-
"""drug DecisionTree.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L5bNW9SC_WWTVQ6jcLxx3Kn10w_3Vf_E
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.tree import plot_tree

df = pd.read_csv("/content/drugg.csv")

df.head()

df.shape

df.info()

df.isnull().sum()

df.describe()

sns.countplot(data=df, x="BP", hue = "Drug")

sns.countplot(data=df, x="Cholesterol", hue = "Drug")

sns.scatterplot(data=df, x="Age", y = "Na_to_K", hue = "Drug")

LE = LabelEncoder()

df['New_Sex'] = LE.fit_transform(df['Sex']) #0=F, 1=M
df['New_BP'] = LE.fit_transform(df['BP']) #0=High, 1=Low, 2=Normal
df['New_Cholesterol'] = LE.fit_transform(df['Cholesterol']) #0=HIGH ,1=NORMAL

df.drop(['Sex','BP','Cholesterol'],axis = 1, inplace =True)

df.head()

x = df.drop('Drug', axis = 1)
y = df['Drug']

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=1)

model = DecisionTreeClassifier()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
accuracy_score(y_test, y_pred)

plt.figure(figsize=(10,7))
plot_tree(model, feature_names = x.columns, class_names = df['Drug'].unique(), filled = True)
plt.title("Decision Tree Visualization")
plt.show()

# create a new patient :
# Age : 23
# Na-to-K ratio : 25.355
# Sex : F = 0
# BP : High = 0
# Cholesterol : High = 0

model.predict([[28, 7.798, 0,3,0]])